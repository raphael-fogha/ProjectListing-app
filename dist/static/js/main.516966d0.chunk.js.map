{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","isLoaded","Notifications","notifications","map","notif","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirebase","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","authorLastName","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.516966d0.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    \r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to =\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to =\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","import firebase from 'firebase'\r\n\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        //const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: \"LOGIN_SUCCESS\" })\r\n        }).catch((err) => {\r\n            dispatch({ type: \"LOGIN_ERROR\", err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState) => {\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n        });\r\n    }\r\n}\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName : newUser.firstName,\r\n                lastName : newUser.lastName,\r\n                email: newUser.email,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n\r\n            })\r\n        }).then(() =>{\r\n            dispatch({type:\"SIGNUP_SUCCESS\"});\r\n        }).catch(err => {\r\n            dispatch({type:\"SIGNUP_ERROR\", err});\r\n        });\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n        <ul className=\"right\">\r\n            <li><NavLink to =\"/signup\">Sign Up</NavLink></li>\r\n            <li><NavLink to =\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const{auth, profile} = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>;\r\n    return(\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n        <div className=\"container\">\r\n            <Link to=\"/\" className=\"brand-logo\"> \r\n                ProjectListing App\r\n            </Link>\r\n            {auth.isLoaded && links}\r\n        </div>\r\n    </nav>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n       auth:state.firebase.auth,\r\n       profile:state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return(\r\n       <div className=\"section\">\r\n           <div className=\"card z-depth-0\">\r\n               <div className=\"card-content\">\r\n                   <span className=\"card-title\">Notifications</span>\r\n                   <ul className=\"notifications\">\r\n                       {notifications && notifications.map(notif => {\r\n                           return(\r\n                               <li key={notif.id}>\r\n                                   <span className=\"pink-text\">{notif.user} </span>\r\n                                   <span>\r\n                                       {notif.content}\r\n                                   </span>\r\n                                   <div className=\"grey-text note-date\">\r\n                                        {moment(notif.time.toDate()).fromNow()}\r\n                                   </div>\r\n                               </li>\r\n                           )\r\n                       })}\r\n                   </ul>\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project =>{\r\n                return(\r\n                    <Link to ={`/project/${project.id}`} key={project.id}>\r\n                        <ProjectSummary \r\n                            project={project}/>\r\n                    </Link>\r\n                )\r\n            } )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React,{Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const {projects, auth, notifications } = this.props;\r\n\r\n        if(!auth.uid){ return <Redirect to=\"/signin\"/>}\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">   \r\n                        <ProjectList projects={projects}/> \r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications\r\n                            notifications={notifications}/> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects, \r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n      }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: [\r\n            'createdAt',\r\n            'desc'\r\n        ]},\r\n        {collection: 'notifications', limit: 3, orderBy:[\r\n            'time',\r\n            'desc'\r\n        ]}\r\n    ])\r\n\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    /*const id = props.match.params.id;*/\r\n    const { project, auth } = props;\r\n    if(!auth.uid){ return <Redirect to=\"/signin\"/>}\r\n    \r\n    if (project) {\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null \r\n\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n\r\n    state = {\r\n        email:\"\",\r\n        password:\"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    } \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n\r\n    } \r\n\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid){ return <Redirect to =\"/\"/>}\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\"\r\n                    onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">\r\n                            Login\r\n                        </button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError : state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => dispatch(signIn(credentials))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        email:\"\",\r\n        password:\"\",\r\n        firstName:\"\",\r\n        lastName:\"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    } \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n\r\n    } \r\n\r\n\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if(auth.uid){return <Redirect to=\"/\"/>}\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\"\r\n                    onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            id=\"firstName\"\r\n                            onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            id=\"lastName\"\r\n                            onChange={this.handleChange}/>\r\n                    </div>\r\n                \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">\r\n                            Sign Up\r\n                        </button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =  (dispatch) => {\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass CreateProject extends Component {\r\n\r\n    state = {\r\n        title:\"\",\r\n        content:\"\"\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    } \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n\r\n    } \r\n\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid){ return <Redirect to=\"/signin\"/>}\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\"\r\n                    onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input \r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea  \r\n                            id=\"content\" \r\n                            className=\"materialize-textarea\"\r\n                            onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) =>{\r\n   /* return {\r\n        type: \"ADD_PROJECT\",\r\n        project:project\r\n    }*/\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        //make async call to dbb\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n\r\n        }).then(() => {\r\n            dispatch({type:'CREATE_PROJECT', project});\r\n        }).catch((err) => {\r\n            dispatch({type:'CREATE_PROJECT_ERROR', err});\r\n        })\r\n        \r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path =\"/project/:id\" component={ProjectDetails}/>\n            <Route path=\"/signin\" component={SignIn}/>\n            <Route path=\"/signup\" component={SignUp}/>\n            <Route path=\"/create\" component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case \"LOGIN_ERROR\":\r\n            console.log('login error');\r\n            return {\r\n                ...state,\r\n                authError: \"Login error\"\r\n            }\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log('login success');\r\n            return{\r\n              ...state,\r\n              authError:null  \r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log('signout success');\r\n            return state;\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            }\r\n        case \"SIGNUP_ERROR\":\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message,\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects:[\r\n        {id:'1', title:'Le premier', content :'Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime, sit fugiat iste sapiente voluptate, itaque possimus ut quod tempora nemo laboriosam necessitatibus. Quia consequuntur aspernatur dolor odit possimus, molestias quasi.'},\r\n        {id:'2', title:'Le deuxieme', content :'Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime, sit fugiat iste sapiente voluptate, itaque possimus ut quod tempora nemo laboriosam necessitatibus. Quia consequuntur aspernatur dolor odit possimus, molestias quasi.'},\r\n        {id:'2', title:'Le trosisieme', content :'Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime, sit fugiat iste sapiente voluptate, itaque possimus ut quod tempora nemo laboriosam necessitatibus. Quia consequuntur aspernatur dolor odit possimus, molestias quasi.'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n   switch(action.type){\r\n       case \"CREATE_PROJECT\":\r\n           console.log('created project',action.project);\r\n           return state;\r\n        case \"CREATE_PROJECT_ERROR\" :\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n   }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : authReducer,\r\n    project : projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyCkkDjwY9F5Gz844dtzIZXNezyyZDiw92g\",\r\n    authDomain: \"marioplan-2417e.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-2417e.firebaseio.com\",\r\n    projectId: \"marioplan-2417e\",\r\n    storageBucket: \"marioplan-2417e.appspot.com\",\r\n    messagingSenderId: \"629253573114\",\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase, ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(firebase, fbConfig)\n    )\n);\n\nconst rrfConfig={\n    userProfile:'users',\n    useFirestoreForProfile:true,\n}\n\nconst rrfProps={\n    firebase,\n    config:rrfConfig,\n    dispatch:store.dispatch,\n    createFirestoreInstance\n};\n\n\nReactDOM.render(\n<Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n    </ReactReduxFirebaseProvider>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}